#include <iostream>
#include<string.h>
using namespace std;

int const size=3;

struct student{
    
    int rno;
    char name[20];
    float SGPA;
};

void accept(struct student list[size]);
void display(struct student list[size]);                      
void insertSort(struct student list[size]);
void binarysearch(struct student list[size]);

int main()
{
    int n;
    char ch;
  
    struct student data[size];
    do{
    cout<<"\n 1:creat data base ";
    cout<<"\n 2:Display";
    cout<<"\n 3:Insertion Sort";
    cout<<"\n 4:Binary Search";
    cout<<"\n 5:exit...";
    cout<<"\n Select your choice:";
    cin>>n;
    switch(n)
    {
        case 1 :
        accept(data);
        break;

        case 2:
         display(data);
         break;
    
        case 3:
         insertSort(data);
         display(data);
         break;
    
    
        case 4:
         binarysearch(data);
         break;

        case 5:
         exit(0);
    
        default:
        cout<<"Invalid choice....";
    
    }
    
    cout<<"\n\nContinue(y/n) : ";
    cin>>ch;
    }while(ch=='y' || ch=='Y');
   
  
 
}
void accept(struct student list[size]){
    int i;                                          
    for (i=0;i<size;i++){                           
        cout<<"\n1]Enter Roll no.- ";
        cin>>list[i].rno;
        cout<<"\n2]Name - ";
        cin>>list[i].name;
        cout<<"\n3]SGPA - ";
        cin>>list[i].SGPA;

        cout<<"\n -----------------------------------";
    }
}

void display(struct student list[size]){                        
    int i;
    cout<<"\n Roll no. |  \t\t Name |  \t\t SGPA | \n";      
    for(i=0;i<size;i++){
        cout<<"\n\t"<<list[i].rno<<"\t\t"<<list[i].name<<"\t\t"<<list[i].SGPA;
    }
}

void insertSort(struct student list[size])
{
    int k,j;
    struct student temp;
    for(k=1;k<size;k++)
    {
        temp=list[k];
        j=k-1;
        while(strcmp(list[j].name,temp.name)>0  &&  j>=0){          
            list[j+1]=list[j];
            --j;                                                        
        }
        list[j+1]=temp;
    }
}

void binarysearch(struct student list[size])
{
    int k, lower, upper, mid;
    char search[80];
    cout<<"\n Enter name of the students you want to search :- ";
    cin>>search;
    
    lower=0;
    upper=size-1;
    mid=(lower+upper)/2;
    
    while(lower<=upper)
    {
        if(strcmp(list[mid].name,search)==0)
        {
            cout<<"\n"<<list[mid].rno<<"\t"<<list[mid].name<<"\t"<<list[mid].SGPA;
            break;
        
        }
        
        else if(strcmp(list[mid].name,search)<0)
        {
            lower=mid+1;
        }
        else
        {
            upper=mid-1;
        }
        

        mid=(lower+upper)/2;
    }

    if(lower>upper){
            cout<<search<<"not found in the list";
    }
}